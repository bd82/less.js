import Node from '../node';
import Color from './color';
import AtRule from './atrule';
import DetachedRuleset from './detached-ruleset';
import Operation from './operation';
import Dimension from './dimension';
import Ruleset from './ruleset';
import Element from './element';
import Selector from './selector';
import Quoted from './quoted';
import Expression from './expression';
import Declaration from './declaration';
import Call from './function-call';
import URL from './url';
import Import from './import';
import Comment from './comment';
import Value from './value';
import Condition from './condition';
import Paren from './block';
import Media from './media';
import Extend from './extend';
import VariableCall from './variable-call';
import NamespaceValue from './namespace-value';
import MixinCall from './mixin-call';
import MixinDefinition from './mixin-definition';
declare const _default: {
    Node: typeof Node;
    Color: typeof Color;
    AtRule: typeof AtRule;
    DetachedRuleset: typeof DetachedRuleset;
    Operation: typeof Operation;
    Dimension: typeof Dimension;
    Unit: any;
    Keyword: any;
    Variable: any;
    Property: any;
    Ruleset: typeof Ruleset;
    Element: typeof Element;
    Attribute: any;
    Combinator: any;
    Selector: typeof Selector;
    Quoted: typeof Quoted;
    Expression: typeof Expression;
    Declaration: typeof Declaration;
    Call: typeof Call;
    URL: typeof URL;
    Import: typeof Import;
    Comment: typeof Comment;
    Anonymous: any;
    Value: typeof Value;
    JavaScript: any;
    Assignment: any;
    Condition: typeof Condition;
    Paren: typeof Paren;
    Media: typeof Media;
    UnicodeDescriptor: any;
    Negative: any;
    Extend: typeof Extend;
    VariableCall: typeof VariableCall;
    NamespaceValue: typeof NamespaceValue;
    mixin: {
        Call: typeof MixinCall;
        Definition: typeof MixinDefinition;
    };
};
export default _default;
